<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->

<configuration>

	<property>
		<name>http.agent.name</name>
		<value>Ahab Captain</value> #elegid cada uno un valor diferente
		<description>HTTP 'User-Agent' request header. MUST NOT be empty -
		  please set this to a single word uniquely related to your organization.
		  NOTE: You should also check other related properties:
		    http.robots.agents
		    http.agent.description
		    http.agent.url
		    http.agent.email
		    http.agent.version
		  and set their values appropriately.
		</description>
	</property>

	<property>
		<name>http.content.limit</name>
		<value>-1</value>
		<description>
			The length limit for downloaded content using the http://
		  protocol, in bytes. If this value is nonnegative (>=0), content longer
		  than it will be truncated; otherwise, no truncation at all. Do not
		  confuse this setting with the file.content.limit setting.
		</description>
	</property>

	<property>
		<name>db.max.outlinks.per.page</name>
		<value>-1</value>
		<description>The maximum number of outlinks that we'll process for a page.
			If this value is nonnegative (>=0), at most db.max.outlinks.per.page outlinks
			will be processed for a page; otherwise, all outlinks will be processed.
		</description>
	</property>

	<property>
		<name>fetcher.server.delay</name>
		<value>0.1</value>
	  <description>The number of seconds the fetcher will delay between
			successive requests to the same server. Note that this might get
			overridden by a Crawl-Delay from a robots.txt and is used ONLY if
			fetcher.threads.per.queue is set to 1.
		</description>
	</property>

	<property>
	  <name>fetcher.server.min.delay</name>
	  <value>0.1</value>
	  <description>The minimum number of seconds the fetcher will delay between
	  successive requests to the same server. This value is applicable ONLY
	  if fetcher.threads.per.queue is greater than 1 (i.e. the host blocking
	  is turned off).</description>
	</property>

	<property>
	  <name>fetcher.timelimit.mins</name>
	  <value>2</value>
	  <description>This is the number of minutes allocated to the fetching.
	  Once this value is reached, any remaining entry from the input URL list is skipped
	  and all active queues are emptied. The default value of -1 deactivates the time limit.
	  </description>
	</property>

	<property>
	  <name>fetcher.threads.fetch</name>
	  <value>50</value>
	  <description>The number of FetcherThreads the fetcher should use.
	  This is also determines the maximum number of requests that are
	  made at once (each FetcherThread handles one connection). The total
	  number of threads running in distributed mode will be the number of
	  fetcher threads * number of nodes as fetcher has one map task per node.
	  </description>
	</property>

	<property>
	  <name>fetcher.threads.per.queue</name>
	  <value>50</value>
	  <description>This number is the maximum number of threads that
	    should be allowed to access a queue at one time. Setting it to
	    a value > 1 will cause the Crawl-Delay value from robots.txt to
	    be ignored and the value of fetcher.server.min.delay to be used
	    as a delay between successive requests to the same server instead
	    of fetcher.server.delay.
	   </description>
	</property>

	<property>
	  <name>plugin.includes</name>
	  <value>protocol-http|headings|urlfilter-(regex|validator)|parse-(html|tika|metatags|js|zip)|catch-all|languageidentifier|creativecommons|tld|index-(basic|anchor|more|metadata|links)|indexer-elastic|scoring-opic|urlnormalizer-(pass|regex|basic|querystring)</value>
		<description>Regular expression naming plugin directory names to
			include.  Any plugin not matching this expression is excluded.
			In any case you need at least include the nutch-extensionpoints plugin. By
			default Nutch includes crawling just HTML and plain text via HTTP,
			and basic indexing and search plugins. In order to use HTTPS please enable
			protocol-httpclient, but be aware of possible intermittent problems with the
			underlying commons-httpclient library. Set parsefilter-naivebayes for classification based focused crawler.
		</description>
	</property>

	<property>
	  <name>headings.multivalued</name>
	  <value>true</value>
	  <description>
			Whether to support multivalued headings.
		</description>
	</property>

	<property>
	 <name>headings</name>
	 <value>h1,h2</value>
	 <description>
		 Comma separated list of headings to retrieve from the document
	 </description>
 </property>

	<property>
	  <name>metatags.names</name>
	  <value>description,keywords,h1,h2</value>
	  <description>
			Use '*' to extract all metatags. Prefixes the names with 'metatag.'
		  in the parse-metadata. For instance to index description and keywords,
		  you need to activate the plugin index-metadata and set the value of the
		  parameter 'index.parse.md' to 'metatag.description,metatag.keywords'.
		</description>
	</property>

	<property>
	  <name>index.parse.md</name>
	  <value>description,keywords,h1,h2</value>
	  <description>
			Comma-separated list of keys to be taken from the parse metadata to generate fields.
		  Can be used e.g. for 'description' or 'keywords' provided that these values are generated
		  by a parser (see parse-metatags plugin)
		</description>
	</property>

	<property>
  <name>elastic.host</name>
  <value>elasticsearch</value>
  <description>Comma-separated list of hostnames to send documents to using
	  TransportClient. Either host and port must be defined or cluster.
	</description>
	</property>

	<property>
	  <name>elastic.port</name>
	  <value>9300</value>
	  <description>
			The port to connect to using TransportClient.
		</description>
	</property>

	<property>
	  <name>elastic.cluster</name>
	  <value>elasticsearch</value>
	  <description>
			The cluster name to discover. Either host and port must be defined
		  or cluster.
		</description>
	</property>

	<property>
	  <name>elastic.index</name>
	  <value>nutch</value>
	  <description>
			Default index to send documents to.
		</description>
	</property>

</configuration>
